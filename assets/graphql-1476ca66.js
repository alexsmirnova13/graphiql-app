function I(e,t){if(!!!e)throw new Error(t)}function z(e){return typeof e=="object"&&e!==null}function Ie(e,t){if(!!!e)throw new Error(t??"Unexpected invariant triggered.")}const bt=/\r\n|[\n\r]/g;function De(e,t){let n=0,i=1;for(const s of e.body.matchAll(bt)){if(typeof s.index=="number"||Ie(!1),s.index>=t)break;n=s.index+s[0].length,i+=1}return{line:i,column:t+1-n}}function gt(e){return Ye(e.source,De(e.source,e.start))}function Ye(e,t){const n=e.locationOffset.column-1,i="".padStart(n)+e.body,s=t.line-1,r=e.locationOffset.line-1,a=t.line+r,l=t.line===1?n:0,d=t.column+l,f=`${e.name}:${a}:${d}
`,h=i.split(/\r\n|[\n\r]/g),x=h[s];if(x.length>120){const A=Math.floor(d/80),L=d%80,N=[];for(let D=0;D<x.length;D+=80)N.push(x.slice(D,D+80));return f+Me([[`${a} |`,N[0]],...N.slice(1,A+1).map(D=>["|",D]),["|","^".padStart(L)],["|",N[A+1]]])}return f+Me([[`${a-1} |`,h[s-1]],[`${a} |`,x],["|","^".padStart(d)],[`${a+1} |`,h[s+1]]])}function Me(e){const t=e.filter(([i,s])=>s!==void 0),n=Math.max(...t.map(([i])=>i.length));return t.map(([i,s])=>i.padStart(n)+(s?" "+s:"")).join(`
`)}function St(e){const t=e[0];return t==null||"kind"in t||"length"in t?{nodes:t,source:e[1],positions:e[2],path:e[3],originalError:e[4],extensions:e[5]}:t}class _ extends Error{constructor(t,...n){var i,s,r;const{nodes:a,source:l,positions:d,path:f,originalError:h,extensions:x}=St(n);super(t),this.name="GraphQLError",this.path=f??void 0,this.originalError=h??void 0,this.nodes=Ve(Array.isArray(a)?a:a?[a]:void 0);const A=Ve((i=this.nodes)===null||i===void 0?void 0:i.map(N=>N.loc).filter(N=>N!=null));this.source=l??(A==null||(s=A[0])===null||s===void 0?void 0:s.source),this.positions=d??(A==null?void 0:A.map(N=>N.start)),this.locations=d&&l?d.map(N=>De(l,N)):A==null?void 0:A.map(N=>De(N.source,N.start));const L=z(h==null?void 0:h.extensions)?h==null?void 0:h.extensions:void 0;this.extensions=(r=x??L)!==null&&r!==void 0?r:Object.create(null),Object.defineProperties(this,{message:{writable:!0,enumerable:!0},name:{enumerable:!1},nodes:{enumerable:!1},source:{enumerable:!1},positions:{enumerable:!1},originalError:{enumerable:!1}}),h!=null&&h.stack?Object.defineProperty(this,"stack",{value:h.stack,writable:!0,configurable:!0}):Error.captureStackTrace?Error.captureStackTrace(this,_):Object.defineProperty(this,"stack",{value:Error().stack,writable:!0,configurable:!0})}get[Symbol.toStringTag](){return"GraphQLError"}toString(){let t=this.message;if(this.nodes)for(const n of this.nodes)n.loc&&(t+=`

`+gt(n.loc));else if(this.source&&this.locations)for(const n of this.locations)t+=`

`+Ye(this.source,n);return t}toJSON(){const t={message:this.message};return this.locations!=null&&(t.locations=this.locations),this.path!=null&&(t.path=this.path),this.extensions!=null&&Object.keys(this.extensions).length>0&&(t.extensions=this.extensions),t}}function Ve(e){return e===void 0||e.length===0?void 0:e}function S(e,t,n){return new _(`Syntax Error: ${n}`,{source:e,positions:[t]})}class Lt{constructor(t,n,i){this.start=t.start,this.end=n.end,this.startToken=t,this.endToken=n,this.source=i}get[Symbol.toStringTag](){return"Location"}toJSON(){return{start:this.start,end:this.end}}}class ze{constructor(t,n,i,s,r,a){this.kind=t,this.start=n,this.end=i,this.line=s,this.column=r,this.value=a,this.prev=null,this.next=null}get[Symbol.toStringTag](){return"Token"}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}}const qe={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},Dt=new Set(Object.keys(qe));function $e(e){const t=e==null?void 0:e.kind;return typeof t=="string"&&Dt.has(t)}var J;(function(e){e.QUERY="query",e.MUTATION="mutation",e.SUBSCRIPTION="subscription"})(J||(J={}));var v;(function(e){e.QUERY="QUERY",e.MUTATION="MUTATION",e.SUBSCRIPTION="SUBSCRIPTION",e.FIELD="FIELD",e.FRAGMENT_DEFINITION="FRAGMENT_DEFINITION",e.FRAGMENT_SPREAD="FRAGMENT_SPREAD",e.INLINE_FRAGMENT="INLINE_FRAGMENT",e.VARIABLE_DEFINITION="VARIABLE_DEFINITION",e.SCHEMA="SCHEMA",e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.FIELD_DEFINITION="FIELD_DEFINITION",e.ARGUMENT_DEFINITION="ARGUMENT_DEFINITION",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.ENUM_VALUE="ENUM_VALUE",e.INPUT_OBJECT="INPUT_OBJECT",e.INPUT_FIELD_DEFINITION="INPUT_FIELD_DEFINITION"})(v||(v={}));var u;(function(e){e.NAME="Name",e.DOCUMENT="Document",e.OPERATION_DEFINITION="OperationDefinition",e.VARIABLE_DEFINITION="VariableDefinition",e.SELECTION_SET="SelectionSet",e.FIELD="Field",e.ARGUMENT="Argument",e.FRAGMENT_SPREAD="FragmentSpread",e.INLINE_FRAGMENT="InlineFragment",e.FRAGMENT_DEFINITION="FragmentDefinition",e.VARIABLE="Variable",e.INT="IntValue",e.FLOAT="FloatValue",e.STRING="StringValue",e.BOOLEAN="BooleanValue",e.NULL="NullValue",e.ENUM="EnumValue",e.LIST="ListValue",e.OBJECT="ObjectValue",e.OBJECT_FIELD="ObjectField",e.DIRECTIVE="Directive",e.NAMED_TYPE="NamedType",e.LIST_TYPE="ListType",e.NON_NULL_TYPE="NonNullType",e.SCHEMA_DEFINITION="SchemaDefinition",e.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",e.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",e.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",e.FIELD_DEFINITION="FieldDefinition",e.INPUT_VALUE_DEFINITION="InputValueDefinition",e.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",e.UNION_TYPE_DEFINITION="UnionTypeDefinition",e.ENUM_TYPE_DEFINITION="EnumTypeDefinition",e.ENUM_VALUE_DEFINITION="EnumValueDefinition",e.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",e.DIRECTIVE_DEFINITION="DirectiveDefinition",e.SCHEMA_EXTENSION="SchemaExtension",e.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",e.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",e.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",e.UNION_TYPE_EXTENSION="UnionTypeExtension",e.ENUM_TYPE_EXTENSION="EnumTypeExtension",e.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension"})(u||(u={}));function we(e){return e===9||e===32}function pe(e){return e>=48&&e<=57}function Xe(e){return e>=97&&e<=122||e>=65&&e<=90}function Ce(e){return Xe(e)||e===95}function He(e){return Xe(e)||pe(e)||e===95}function wt(e){var t;let n=Number.MAX_SAFE_INTEGER,i=null,s=-1;for(let a=0;a<e.length;++a){var r;const l=e[a],d=Rt(l);d!==l.length&&(i=(r=i)!==null&&r!==void 0?r:a,s=a,a!==0&&d<n&&(n=d))}return e.map((a,l)=>l===0?a:a.slice(n)).slice((t=i)!==null&&t!==void 0?t:0,s+1)}function Rt(e){let t=0;for(;t<e.length&&we(e.charCodeAt(t));)++t;return t}function kt(e,t){const n=e.replace(/"""/g,'\\"""'),i=n.split(/\r\n|[\n\r]/g),s=i.length===1,r=i.length>1&&i.slice(1).every(L=>L.length===0||we(L.charCodeAt(0))),a=n.endsWith('\\"""'),l=e.endsWith('"')&&!a,d=e.endsWith("\\"),f=l||d,h=!(t!=null&&t.minimize)&&(!s||e.length>70||f||r||a);let x="";const A=s&&we(e.charCodeAt(0));return(h&&!A||r)&&(x+=`
`),x+=n,(h||f)&&(x+=`
`),'"""'+x+'"""'}var o;(function(e){e.SOF="<SOF>",e.EOF="<EOF>",e.BANG="!",e.DOLLAR="$",e.AMP="&",e.PAREN_L="(",e.PAREN_R=")",e.SPREAD="...",e.COLON=":",e.EQUALS="=",e.AT="@",e.BRACKET_L="[",e.BRACKET_R="]",e.BRACE_L="{",e.PIPE="|",e.BRACE_R="}",e.NAME="Name",e.INT="Int",e.FLOAT="Float",e.STRING="String",e.BLOCK_STRING="BlockString",e.COMMENT="Comment"})(o||(o={}));class Ct{constructor(t){const n=new ze(o.SOF,0,0,0,0);this.source=t,this.lastToken=n,this.token=n,this.line=1,this.lineStart=0}get[Symbol.toStringTag](){return"Lexer"}advance(){return this.lastToken=this.token,this.token=this.lookahead()}lookahead(){let t=this.token;if(t.kind!==o.EOF)do if(t.next)t=t.next;else{const n=Ut(this,t.end);t.next=n,n.prev=t,t=n}while(t.kind===o.COMMENT);return t}}function Ft(e){return e===o.BANG||e===o.DOLLAR||e===o.AMP||e===o.PAREN_L||e===o.PAREN_R||e===o.SPREAD||e===o.COLON||e===o.EQUALS||e===o.AT||e===o.BRACKET_L||e===o.BRACKET_R||e===o.BRACE_L||e===o.PIPE||e===o.BRACE_R}function re(e){return e>=0&&e<=55295||e>=57344&&e<=1114111}function _e(e,t){return We(e.charCodeAt(t))&&Ze(e.charCodeAt(t+1))}function We(e){return e>=55296&&e<=56319}function Ze(e){return e>=56320&&e<=57343}function Z(e,t){const n=e.source.body.codePointAt(t);if(n===void 0)return o.EOF;if(n>=32&&n<=126){const i=String.fromCodePoint(n);return i==='"'?`'"'`:`"${i}"`}return"U+"+n.toString(16).toUpperCase().padStart(4,"0")}function g(e,t,n,i,s){const r=e.line,a=1+n-e.lineStart;return new ze(t,n,i,r,a,s)}function Ut(e,t){const n=e.source.body,i=n.length;let s=t;for(;s<i;){const r=n.charCodeAt(s);switch(r){case 65279:case 9:case 32:case 44:++s;continue;case 10:++s,++e.line,e.lineStart=s;continue;case 13:n.charCodeAt(s+1)===10?s+=2:++s,++e.line,e.lineStart=s;continue;case 35:return Mt(e,s);case 33:return g(e,o.BANG,s,s+1);case 36:return g(e,o.DOLLAR,s,s+1);case 38:return g(e,o.AMP,s,s+1);case 40:return g(e,o.PAREN_L,s,s+1);case 41:return g(e,o.PAREN_R,s,s+1);case 46:if(n.charCodeAt(s+1)===46&&n.charCodeAt(s+2)===46)return g(e,o.SPREAD,s,s+3);break;case 58:return g(e,o.COLON,s,s+1);case 61:return g(e,o.EQUALS,s,s+1);case 64:return g(e,o.AT,s,s+1);case 91:return g(e,o.BRACKET_L,s,s+1);case 93:return g(e,o.BRACKET_R,s,s+1);case 123:return g(e,o.BRACE_L,s,s+1);case 124:return g(e,o.PIPE,s,s+1);case 125:return g(e,o.BRACE_R,s,s+1);case 34:return n.charCodeAt(s+1)===34&&n.charCodeAt(s+2)===34?Gt(e,s):$t(e,s)}if(pe(r)||r===45)return Vt(e,s,r);if(Ce(r))return Qt(e,s);throw S(e.source,s,r===39?`Unexpected single quote character ('), did you mean to use a double quote (")?`:re(r)||_e(n,s)?`Unexpected character: ${Z(e,s)}.`:`Invalid character: ${Z(e,s)}.`)}return g(e,o.EOF,i,i)}function Mt(e,t){const n=e.source.body,i=n.length;let s=t+1;for(;s<i;){const r=n.charCodeAt(s);if(r===10||r===13)break;if(re(r))++s;else if(_e(n,s))s+=2;else break}return g(e,o.COMMENT,t,s,n.slice(t+1,s))}function Vt(e,t,n){const i=e.source.body;let s=t,r=n,a=!1;if(r===45&&(r=i.charCodeAt(++s)),r===48){if(r=i.charCodeAt(++s),pe(r))throw S(e.source,s,`Invalid number, unexpected digit after 0: ${Z(e,s)}.`)}else s=ge(e,s,r),r=i.charCodeAt(s);if(r===46&&(a=!0,r=i.charCodeAt(++s),s=ge(e,s,r),r=i.charCodeAt(s)),(r===69||r===101)&&(a=!0,r=i.charCodeAt(++s),(r===43||r===45)&&(r=i.charCodeAt(++s)),s=ge(e,s,r),r=i.charCodeAt(s)),r===46||Ce(r))throw S(e.source,s,`Invalid number, expected digit but got: ${Z(e,s)}.`);return g(e,a?o.FLOAT:o.INT,t,s,i.slice(t,s))}function ge(e,t,n){if(!pe(n))throw S(e.source,t,`Invalid number, expected digit but got: ${Z(e,t)}.`);const i=e.source.body;let s=t+1;for(;pe(i.charCodeAt(s));)++s;return s}function $t(e,t){const n=e.source.body,i=n.length;let s=t+1,r=s,a="";for(;s<i;){const l=n.charCodeAt(s);if(l===34)return a+=n.slice(r,s),g(e,o.STRING,t,s+1,a);if(l===92){a+=n.slice(r,s);const d=n.charCodeAt(s+1)===117?n.charCodeAt(s+2)===123?jt(e,s):Bt(e,s):Pt(e,s);a+=d.value,s+=d.size,r=s;continue}if(l===10||l===13)break;if(re(l))++s;else if(_e(n,s))s+=2;else throw S(e.source,s,`Invalid character within String: ${Z(e,s)}.`)}throw S(e.source,s,"Unterminated string.")}function jt(e,t){const n=e.source.body;let i=0,s=3;for(;s<12;){const r=n.charCodeAt(t+s++);if(r===125){if(s<5||!re(i))break;return{value:String.fromCodePoint(i),size:s}}if(i=i<<4|ce(r),i<0)break}throw S(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+s)}".`)}function Bt(e,t){const n=e.source.body,i=je(n,t+2);if(re(i))return{value:String.fromCodePoint(i),size:6};if(We(i)&&n.charCodeAt(t+6)===92&&n.charCodeAt(t+7)===117){const s=je(n,t+8);if(Ze(s))return{value:String.fromCodePoint(i,s),size:12}}throw S(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+6)}".`)}function je(e,t){return ce(e.charCodeAt(t))<<12|ce(e.charCodeAt(t+1))<<8|ce(e.charCodeAt(t+2))<<4|ce(e.charCodeAt(t+3))}function ce(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function Pt(e,t){const n=e.source.body;switch(n.charCodeAt(t+1)){case 34:return{value:'"',size:2};case 92:return{value:"\\",size:2};case 47:return{value:"/",size:2};case 98:return{value:"\b",size:2};case 102:return{value:"\f",size:2};case 110:return{value:`
`,size:2};case 114:return{value:"\r",size:2};case 116:return{value:"	",size:2}}throw S(e.source,t,`Invalid character escape sequence: "${n.slice(t,t+2)}".`)}function Gt(e,t){const n=e.source.body,i=n.length;let s=e.lineStart,r=t+3,a=r,l="";const d=[];for(;r<i;){const f=n.charCodeAt(r);if(f===34&&n.charCodeAt(r+1)===34&&n.charCodeAt(r+2)===34){l+=n.slice(a,r),d.push(l);const h=g(e,o.BLOCK_STRING,t,r+3,wt(d).join(`
`));return e.line+=d.length-1,e.lineStart=s,h}if(f===92&&n.charCodeAt(r+1)===34&&n.charCodeAt(r+2)===34&&n.charCodeAt(r+3)===34){l+=n.slice(a,r),a=r+1,r+=4;continue}if(f===10||f===13){l+=n.slice(a,r),d.push(l),f===13&&n.charCodeAt(r+1)===10?r+=2:++r,l="",a=r,s=r;continue}if(re(f))++r;else if(_e(n,r))r+=2;else throw S(e.source,r,`Invalid character within String: ${Z(e,r)}.`)}throw S(e.source,r,"Unterminated string.")}function Qt(e,t){const n=e.source.body,i=n.length;let s=t+1;for(;s<i;){const r=n.charCodeAt(s);if(He(r))++s;else break}return g(e,o.NAME,t,s,n.slice(t,s))}const Jt=10,Ke=2;function m(e){return Ae(e,[])}function Ae(e,t){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return Yt(e,t);default:return String(e)}}function Yt(e,t){if(e===null)return"null";if(t.includes(e))return"[Circular]";const n=[...t,e];if(zt(e)){const i=e.toJSON();if(i!==e)return typeof i=="string"?i:Ae(i,n)}else if(Array.isArray(e))return Xt(e,n);return qt(e,n)}function zt(e){return typeof e.toJSON=="function"}function qt(e,t){const n=Object.entries(e);return n.length===0?"{}":t.length>Ke?"["+Ht(e)+"]":"{ "+n.map(([s,r])=>s+": "+Ae(r,t)).join(", ")+" }"}function Xt(e,t){if(e.length===0)return"[]";if(t.length>Ke)return"[Array]";const n=Math.min(Jt,e.length),i=e.length-n,s=[];for(let r=0;r<n;++r)s.push(Ae(e[r],t));return i===1?s.push("... 1 more item"):i>1&&s.push(`... ${i} more items`),"["+s.join(", ")+"]"}function Ht(e){const t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if(t==="Object"&&typeof e.constructor=="function"){const n=e.constructor.name;if(typeof n=="string"&&n!=="")return n}return t}const Q=function(t,n){return t instanceof n};class et{constructor(t,n="GraphQL request",i={line:1,column:1}){typeof t=="string"||I(!1,`Body must be a string. Received: ${m(t)}.`),this.body=t,this.name=n,this.locationOffset=i,this.locationOffset.line>0||I(!1,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||I(!1,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}}function Wt(e){return Q(e,et)}function Zt(e,t){const n=new Kt(e,t);n.expectToken(o.SOF);const i=n.parseValueLiteral(!1);return n.expectToken(o.EOF),i}class Kt{constructor(t,n={}){const i=Wt(t)?t:new et(t);this._lexer=new Ct(i),this._options=n,this._tokenCounter=0}parseName(){const t=this.expectToken(o.NAME);return this.node(t,{kind:u.NAME,value:t.value})}parseDocument(){return this.node(this._lexer.token,{kind:u.DOCUMENT,definitions:this.many(o.SOF,this.parseDefinition,o.EOF)})}parseDefinition(){if(this.peek(o.BRACE_L))return this.parseOperationDefinition();const t=this.peekDescription(),n=t?this._lexer.lookahead():this._lexer.token;if(n.kind===o.NAME){switch(n.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}if(t)throw S(this._lexer.source,this._lexer.token.start,"Unexpected description, descriptions are supported only on type definitions.");switch(n.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"extend":return this.parseTypeSystemExtension()}}throw this.unexpected(n)}parseOperationDefinition(){const t=this._lexer.token;if(this.peek(o.BRACE_L))return this.node(t,{kind:u.OPERATION_DEFINITION,operation:J.QUERY,name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet()});const n=this.parseOperationType();let i;return this.peek(o.NAME)&&(i=this.parseName()),this.node(t,{kind:u.OPERATION_DEFINITION,operation:n,name:i,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseOperationType(){const t=this.expectToken(o.NAME);switch(t.value){case"query":return J.QUERY;case"mutation":return J.MUTATION;case"subscription":return J.SUBSCRIPTION}throw this.unexpected(t)}parseVariableDefinitions(){return this.optionalMany(o.PAREN_L,this.parseVariableDefinition,o.PAREN_R)}parseVariableDefinition(){return this.node(this._lexer.token,{kind:u.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(o.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(o.EQUALS)?this.parseConstValueLiteral():void 0,directives:this.parseConstDirectives()})}parseVariable(){const t=this._lexer.token;return this.expectToken(o.DOLLAR),this.node(t,{kind:u.VARIABLE,name:this.parseName()})}parseSelectionSet(){return this.node(this._lexer.token,{kind:u.SELECTION_SET,selections:this.many(o.BRACE_L,this.parseSelection,o.BRACE_R)})}parseSelection(){return this.peek(o.SPREAD)?this.parseFragment():this.parseField()}parseField(){const t=this._lexer.token,n=this.parseName();let i,s;return this.expectOptionalToken(o.COLON)?(i=n,s=this.parseName()):s=n,this.node(t,{kind:u.FIELD,alias:i,name:s,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(o.BRACE_L)?this.parseSelectionSet():void 0})}parseArguments(t){const n=t?this.parseConstArgument:this.parseArgument;return this.optionalMany(o.PAREN_L,n,o.PAREN_R)}parseArgument(t=!1){const n=this._lexer.token,i=this.parseName();return this.expectToken(o.COLON),this.node(n,{kind:u.ARGUMENT,name:i,value:this.parseValueLiteral(t)})}parseConstArgument(){return this.parseArgument(!0)}parseFragment(){const t=this._lexer.token;this.expectToken(o.SPREAD);const n=this.expectOptionalKeyword("on");return!n&&this.peek(o.NAME)?this.node(t,{kind:u.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(!1)}):this.node(t,{kind:u.INLINE_FRAGMENT,typeCondition:n?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentDefinition(){const t=this._lexer.token;return this.expectKeyword("fragment"),this._options.allowLegacyFragmentVariables===!0?this.node(t,{kind:u.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()}):this.node(t,{kind:u.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentName(){if(this._lexer.token.value==="on")throw this.unexpected();return this.parseName()}parseValueLiteral(t){const n=this._lexer.token;switch(n.kind){case o.BRACKET_L:return this.parseList(t);case o.BRACE_L:return this.parseObject(t);case o.INT:return this.advanceLexer(),this.node(n,{kind:u.INT,value:n.value});case o.FLOAT:return this.advanceLexer(),this.node(n,{kind:u.FLOAT,value:n.value});case o.STRING:case o.BLOCK_STRING:return this.parseStringLiteral();case o.NAME:switch(this.advanceLexer(),n.value){case"true":return this.node(n,{kind:u.BOOLEAN,value:!0});case"false":return this.node(n,{kind:u.BOOLEAN,value:!1});case"null":return this.node(n,{kind:u.NULL});default:return this.node(n,{kind:u.ENUM,value:n.value})}case o.DOLLAR:if(t)if(this.expectToken(o.DOLLAR),this._lexer.token.kind===o.NAME){const i=this._lexer.token.value;throw S(this._lexer.source,n.start,`Unexpected variable "$${i}" in constant value.`)}else throw this.unexpected(n);return this.parseVariable();default:throw this.unexpected()}}parseConstValueLiteral(){return this.parseValueLiteral(!0)}parseStringLiteral(){const t=this._lexer.token;return this.advanceLexer(),this.node(t,{kind:u.STRING,value:t.value,block:t.kind===o.BLOCK_STRING})}parseList(t){const n=()=>this.parseValueLiteral(t);return this.node(this._lexer.token,{kind:u.LIST,values:this.any(o.BRACKET_L,n,o.BRACKET_R)})}parseObject(t){const n=()=>this.parseObjectField(t);return this.node(this._lexer.token,{kind:u.OBJECT,fields:this.any(o.BRACE_L,n,o.BRACE_R)})}parseObjectField(t){const n=this._lexer.token,i=this.parseName();return this.expectToken(o.COLON),this.node(n,{kind:u.OBJECT_FIELD,name:i,value:this.parseValueLiteral(t)})}parseDirectives(t){const n=[];for(;this.peek(o.AT);)n.push(this.parseDirective(t));return n}parseConstDirectives(){return this.parseDirectives(!0)}parseDirective(t){const n=this._lexer.token;return this.expectToken(o.AT),this.node(n,{kind:u.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(t)})}parseTypeReference(){const t=this._lexer.token;let n;if(this.expectOptionalToken(o.BRACKET_L)){const i=this.parseTypeReference();this.expectToken(o.BRACKET_R),n=this.node(t,{kind:u.LIST_TYPE,type:i})}else n=this.parseNamedType();return this.expectOptionalToken(o.BANG)?this.node(t,{kind:u.NON_NULL_TYPE,type:n}):n}parseNamedType(){return this.node(this._lexer.token,{kind:u.NAMED_TYPE,name:this.parseName()})}peekDescription(){return this.peek(o.STRING)||this.peek(o.BLOCK_STRING)}parseDescription(){if(this.peekDescription())return this.parseStringLiteral()}parseSchemaDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("schema");const i=this.parseConstDirectives(),s=this.many(o.BRACE_L,this.parseOperationTypeDefinition,o.BRACE_R);return this.node(t,{kind:u.SCHEMA_DEFINITION,description:n,directives:i,operationTypes:s})}parseOperationTypeDefinition(){const t=this._lexer.token,n=this.parseOperationType();this.expectToken(o.COLON);const i=this.parseNamedType();return this.node(t,{kind:u.OPERATION_TYPE_DEFINITION,operation:n,type:i})}parseScalarTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("scalar");const i=this.parseName(),s=this.parseConstDirectives();return this.node(t,{kind:u.SCALAR_TYPE_DEFINITION,description:n,name:i,directives:s})}parseObjectTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("type");const i=this.parseName(),s=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),a=this.parseFieldsDefinition();return this.node(t,{kind:u.OBJECT_TYPE_DEFINITION,description:n,name:i,interfaces:s,directives:r,fields:a})}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(o.AMP,this.parseNamedType):[]}parseFieldsDefinition(){return this.optionalMany(o.BRACE_L,this.parseFieldDefinition,o.BRACE_R)}parseFieldDefinition(){const t=this._lexer.token,n=this.parseDescription(),i=this.parseName(),s=this.parseArgumentDefs();this.expectToken(o.COLON);const r=this.parseTypeReference(),a=this.parseConstDirectives();return this.node(t,{kind:u.FIELD_DEFINITION,description:n,name:i,arguments:s,type:r,directives:a})}parseArgumentDefs(){return this.optionalMany(o.PAREN_L,this.parseInputValueDef,o.PAREN_R)}parseInputValueDef(){const t=this._lexer.token,n=this.parseDescription(),i=this.parseName();this.expectToken(o.COLON);const s=this.parseTypeReference();let r;this.expectOptionalToken(o.EQUALS)&&(r=this.parseConstValueLiteral());const a=this.parseConstDirectives();return this.node(t,{kind:u.INPUT_VALUE_DEFINITION,description:n,name:i,type:s,defaultValue:r,directives:a})}parseInterfaceTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("interface");const i=this.parseName(),s=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),a=this.parseFieldsDefinition();return this.node(t,{kind:u.INTERFACE_TYPE_DEFINITION,description:n,name:i,interfaces:s,directives:r,fields:a})}parseUnionTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("union");const i=this.parseName(),s=this.parseConstDirectives(),r=this.parseUnionMemberTypes();return this.node(t,{kind:u.UNION_TYPE_DEFINITION,description:n,name:i,directives:s,types:r})}parseUnionMemberTypes(){return this.expectOptionalToken(o.EQUALS)?this.delimitedMany(o.PIPE,this.parseNamedType):[]}parseEnumTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("enum");const i=this.parseName(),s=this.parseConstDirectives(),r=this.parseEnumValuesDefinition();return this.node(t,{kind:u.ENUM_TYPE_DEFINITION,description:n,name:i,directives:s,values:r})}parseEnumValuesDefinition(){return this.optionalMany(o.BRACE_L,this.parseEnumValueDefinition,o.BRACE_R)}parseEnumValueDefinition(){const t=this._lexer.token,n=this.parseDescription(),i=this.parseEnumValueName(),s=this.parseConstDirectives();return this.node(t,{kind:u.ENUM_VALUE_DEFINITION,description:n,name:i,directives:s})}parseEnumValueName(){if(this._lexer.token.value==="true"||this._lexer.token.value==="false"||this._lexer.token.value==="null")throw S(this._lexer.source,this._lexer.token.start,`${ye(this._lexer.token)} is reserved and cannot be used for an enum value.`);return this.parseName()}parseInputObjectTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("input");const i=this.parseName(),s=this.parseConstDirectives(),r=this.parseInputFieldsDefinition();return this.node(t,{kind:u.INPUT_OBJECT_TYPE_DEFINITION,description:n,name:i,directives:s,fields:r})}parseInputFieldsDefinition(){return this.optionalMany(o.BRACE_L,this.parseInputValueDef,o.BRACE_R)}parseTypeSystemExtension(){const t=this._lexer.lookahead();if(t.kind===o.NAME)switch(t.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(t)}parseSchemaExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("schema");const n=this.parseConstDirectives(),i=this.optionalMany(o.BRACE_L,this.parseOperationTypeDefinition,o.BRACE_R);if(n.length===0&&i.length===0)throw this.unexpected();return this.node(t,{kind:u.SCHEMA_EXTENSION,directives:n,operationTypes:i})}parseScalarTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("scalar");const n=this.parseName(),i=this.parseConstDirectives();if(i.length===0)throw this.unexpected();return this.node(t,{kind:u.SCALAR_TYPE_EXTENSION,name:n,directives:i})}parseObjectTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("type");const n=this.parseName(),i=this.parseImplementsInterfaces(),s=this.parseConstDirectives(),r=this.parseFieldsDefinition();if(i.length===0&&s.length===0&&r.length===0)throw this.unexpected();return this.node(t,{kind:u.OBJECT_TYPE_EXTENSION,name:n,interfaces:i,directives:s,fields:r})}parseInterfaceTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("interface");const n=this.parseName(),i=this.parseImplementsInterfaces(),s=this.parseConstDirectives(),r=this.parseFieldsDefinition();if(i.length===0&&s.length===0&&r.length===0)throw this.unexpected();return this.node(t,{kind:u.INTERFACE_TYPE_EXTENSION,name:n,interfaces:i,directives:s,fields:r})}parseUnionTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("union");const n=this.parseName(),i=this.parseConstDirectives(),s=this.parseUnionMemberTypes();if(i.length===0&&s.length===0)throw this.unexpected();return this.node(t,{kind:u.UNION_TYPE_EXTENSION,name:n,directives:i,types:s})}parseEnumTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("enum");const n=this.parseName(),i=this.parseConstDirectives(),s=this.parseEnumValuesDefinition();if(i.length===0&&s.length===0)throw this.unexpected();return this.node(t,{kind:u.ENUM_TYPE_EXTENSION,name:n,directives:i,values:s})}parseInputObjectTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("input");const n=this.parseName(),i=this.parseConstDirectives(),s=this.parseInputFieldsDefinition();if(i.length===0&&s.length===0)throw this.unexpected();return this.node(t,{kind:u.INPUT_OBJECT_TYPE_EXTENSION,name:n,directives:i,fields:s})}parseDirectiveDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("directive"),this.expectToken(o.AT);const i=this.parseName(),s=this.parseArgumentDefs(),r=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");const a=this.parseDirectiveLocations();return this.node(t,{kind:u.DIRECTIVE_DEFINITION,description:n,name:i,arguments:s,repeatable:r,locations:a})}parseDirectiveLocations(){return this.delimitedMany(o.PIPE,this.parseDirectiveLocation)}parseDirectiveLocation(){const t=this._lexer.token,n=this.parseName();if(Object.prototype.hasOwnProperty.call(v,n.value))return n;throw this.unexpected(t)}node(t,n){return this._options.noLocation!==!0&&(n.loc=new Lt(t,this._lexer.lastToken,this._lexer.source)),n}peek(t){return this._lexer.token.kind===t}expectToken(t){const n=this._lexer.token;if(n.kind===t)return this.advanceLexer(),n;throw S(this._lexer.source,n.start,`Expected ${tt(t)}, found ${ye(n)}.`)}expectOptionalToken(t){return this._lexer.token.kind===t?(this.advanceLexer(),!0):!1}expectKeyword(t){const n=this._lexer.token;if(n.kind===o.NAME&&n.value===t)this.advanceLexer();else throw S(this._lexer.source,n.start,`Expected "${t}", found ${ye(n)}.`)}expectOptionalKeyword(t){const n=this._lexer.token;return n.kind===o.NAME&&n.value===t?(this.advanceLexer(),!0):!1}unexpected(t){const n=t??this._lexer.token;return S(this._lexer.source,n.start,`Unexpected ${ye(n)}.`)}any(t,n,i){this.expectToken(t);const s=[];for(;!this.expectOptionalToken(i);)s.push(n.call(this));return s}optionalMany(t,n,i){if(this.expectOptionalToken(t)){const s=[];do s.push(n.call(this));while(!this.expectOptionalToken(i));return s}return[]}many(t,n,i){this.expectToken(t);const s=[];do s.push(n.call(this));while(!this.expectOptionalToken(i));return s}delimitedMany(t,n){this.expectOptionalToken(t);const i=[];do i.push(n.call(this));while(this.expectOptionalToken(t));return i}advanceLexer(){const{maxTokens:t}=this._options,n=this._lexer.advance();if(t!==void 0&&n.kind!==o.EOF&&(++this._tokenCounter,this._tokenCounter>t))throw S(this._lexer.source,n.start,`Document contains more that ${t} tokens. Parsing aborted.`)}}function ye(e){const t=e.value;return tt(e.kind)+(t!=null?` "${t}"`:"")}function tt(e){return Ft(e)?`"${e}"`:e}const en=5;function tn(e,t){const[n,i]=t?[e,t]:[void 0,e];let s=" Did you mean ";n&&(s+=n+" ");const r=i.map(d=>`"${d}"`);switch(r.length){case 0:return"";case 1:return s+r[0]+"?";case 2:return s+r[0]+" or "+r[1]+"?"}const a=r.slice(0,en),l=a.pop();return s+a.join(", ")+", or "+l+"?"}function Be(e){return e}function nt(e,t){const n=Object.create(null);for(const i of e)n[t(i)]=i;return n}function W(e,t,n){const i=Object.create(null);for(const s of e)i[t(s)]=n(s);return i}function xe(e,t){const n=Object.create(null);for(const i of Object.keys(e))n[i]=t(e[i],i);return n}function nn(e,t){let n=0,i=0;for(;n<e.length&&i<t.length;){let s=e.charCodeAt(n),r=t.charCodeAt(i);if(Ee(s)&&Ee(r)){let a=0;do++n,a=a*10+s-Re,s=e.charCodeAt(n);while(Ee(s)&&a>0);let l=0;do++i,l=l*10+r-Re,r=t.charCodeAt(i);while(Ee(r)&&l>0);if(a<l)return-1;if(a>l)return 1}else{if(s<r)return-1;if(s>r)return 1;++n,++i}}return e.length-t.length}const Re=48,sn=57;function Ee(e){return!isNaN(e)&&Re<=e&&e<=sn}function rn(e,t){const n=Object.create(null),i=new on(e),s=Math.floor(e.length*.4)+1;for(const r of t){const a=i.measure(r,s);a!==void 0&&(n[r]=a)}return Object.keys(n).sort((r,a)=>{const l=n[r]-n[a];return l!==0?l:nn(r,a)})}class on{constructor(t){this._input=t,this._inputLowerCase=t.toLowerCase(),this._inputArray=Pe(this._inputLowerCase),this._rows=[new Array(t.length+1).fill(0),new Array(t.length+1).fill(0),new Array(t.length+1).fill(0)]}measure(t,n){if(this._input===t)return 0;const i=t.toLowerCase();if(this._inputLowerCase===i)return 1;let s=Pe(i),r=this._inputArray;if(s.length<r.length){const h=s;s=r,r=h}const a=s.length,l=r.length;if(a-l>n)return;const d=this._rows;for(let h=0;h<=l;h++)d[0][h]=h;for(let h=1;h<=a;h++){const x=d[(h-1)%3],A=d[h%3];let L=A[0]=h;for(let N=1;N<=l;N++){const D=s[h-1]===r[N-1]?0:1;let F=Math.min(x[N]+1,A[N-1]+1,x[N-1]+D);if(h>1&&N>1&&s[h-1]===r[N-2]&&s[h-2]===r[N-1]){const w=d[(h-2)%3][N-2];F=Math.min(F,w+1)}F<L&&(L=F),A[N]=F}if(L>n)return}const f=d[a%3][l];return f<=n?f:void 0}}function Pe(e){const t=e.length,n=new Array(t);for(let i=0;i<t;++i)n[i]=e.charCodeAt(i);return n}function C(e){if(e==null)return Object.create(null);if(Object.getPrototypeOf(e)===null)return e;const t=Object.create(null);for(const[n,i]of Object.entries(e))t[n]=i;return t}function an(e){return`"${e.replace(cn,un)}"`}const cn=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function un(e){return ln[e.charCodeAt(0)]}const ln=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"],pn=Object.freeze({});function dn(e,t,n=qe){const i=new Map;for(const w of Object.values(u))i.set(w,hn(t,w));let s,r=Array.isArray(e),a=[e],l=-1,d=[],f=e,h,x;const A=[],L=[];do{l++;const w=l===a.length,me=w&&d.length!==0;if(w){if(h=L.length===0?void 0:A[A.length-1],f=x,x=L.pop(),me)if(r){f=f.slice();let U=0;for(const[ae,ie]of d){const Te=ae-U;ie===null?(f.splice(Te,1),U++):f[Te]=ie}}else{f=Object.defineProperties({},Object.getOwnPropertyDescriptors(f));for(const[U,ae]of d)f[U]=ae}l=s.index,a=s.keys,d=s.edits,r=s.inArray,s=s.prev}else if(x){if(h=r?l:a[l],f=x[h],f==null)continue;A.push(h)}let P;if(!Array.isArray(f)){var N,D;$e(f)||I(!1,`Invalid AST Node: ${m(f)}.`);const U=w?(N=i.get(f.kind))===null||N===void 0?void 0:N.leave:(D=i.get(f.kind))===null||D===void 0?void 0:D.enter;if(P=U==null?void 0:U.call(t,f,h,x,A,L),P===pn)break;if(P===!1){if(!w){A.pop();continue}}else if(P!==void 0&&(d.push([h,P]),!w))if($e(P))f=P;else{A.pop();continue}}if(P===void 0&&me&&d.push([h,f]),w)A.pop();else{var F;s={inArray:r,index:l,keys:a,edits:d,prev:s},r=Array.isArray(f),a=r?f:(F=n[f.kind])!==null&&F!==void 0?F:[],l=-1,d=[],x&&L.push(x),x=f}}while(s!==void 0);return d.length!==0?d[d.length-1][1]:e}function hn(e,t){const n=e[t];return typeof n=="object"?n:typeof n=="function"?{enter:n,leave:void 0}:{enter:e.enter,leave:e.leave}}function X(e){return dn(e,mn)}const fn=80,mn={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>p(e.definitions,`

`)},OperationDefinition:{leave(e){const t=y("(",p(e.variableDefinitions,", "),")"),n=p([e.operation,p([e.name,t]),p(e.directives," ")]," ");return(n==="query"?"":n+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:t,defaultValue:n,directives:i})=>e+": "+t+y(" = ",n)+y(" ",p(i," "))},SelectionSet:{leave:({selections:e})=>M(e)},Field:{leave({alias:e,name:t,arguments:n,directives:i,selectionSet:s}){const r=y("",e,": ")+t;let a=r+y("(",p(n,", "),")");return a.length>fn&&(a=r+y(`(
`,ve(p(n,`
`)),`
)`)),p([a,p(i," "),s]," ")}},Argument:{leave:({name:e,value:t})=>e+": "+t},FragmentSpread:{leave:({name:e,directives:t})=>"..."+e+y(" ",p(t," "))},InlineFragment:{leave:({typeCondition:e,directives:t,selectionSet:n})=>p(["...",y("on ",e),p(t," "),n]," ")},FragmentDefinition:{leave:({name:e,typeCondition:t,variableDefinitions:n,directives:i,selectionSet:s})=>`fragment ${e}${y("(",p(n,", "),")")} on ${t} ${y("",p(i," ")," ")}`+s},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:t})=>t?kt(e):an(e)},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+p(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{"+p(e,", ")+"}"},ObjectField:{leave:({name:e,value:t})=>e+": "+t},Directive:{leave:({name:e,arguments:t})=>"@"+e+y("(",p(t,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:t,operationTypes:n})=>y("",e,`
`)+p(["schema",p(t," "),M(n)]," ")},OperationTypeDefinition:{leave:({operation:e,type:t})=>e+": "+t},ScalarTypeDefinition:{leave:({description:e,name:t,directives:n})=>y("",e,`
`)+p(["scalar",t,p(n," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:i,fields:s})=>y("",e,`
`)+p(["type",t,y("implements ",p(n," & ")),p(i," "),M(s)]," ")},FieldDefinition:{leave:({description:e,name:t,arguments:n,type:i,directives:s})=>y("",e,`
`)+t+(Ge(n)?y(`(
`,ve(p(n,`
`)),`
)`):y("(",p(n,", "),")"))+": "+i+y(" ",p(s," "))},InputValueDefinition:{leave:({description:e,name:t,type:n,defaultValue:i,directives:s})=>y("",e,`
`)+p([t+": "+n,y("= ",i),p(s," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:i,fields:s})=>y("",e,`
`)+p(["interface",t,y("implements ",p(n," & ")),p(i," "),M(s)]," ")},UnionTypeDefinition:{leave:({description:e,name:t,directives:n,types:i})=>y("",e,`
`)+p(["union",t,p(n," "),y("= ",p(i," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:t,directives:n,values:i})=>y("",e,`
`)+p(["enum",t,p(n," "),M(i)]," ")},EnumValueDefinition:{leave:({description:e,name:t,directives:n})=>y("",e,`
`)+p([t,p(n," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:t,directives:n,fields:i})=>y("",e,`
`)+p(["input",t,p(n," "),M(i)]," ")},DirectiveDefinition:{leave:({description:e,name:t,arguments:n,repeatable:i,locations:s})=>y("",e,`
`)+"directive @"+t+(Ge(n)?y(`(
`,ve(p(n,`
`)),`
)`):y("(",p(n,", "),")"))+(i?" repeatable":"")+" on "+p(s," | ")},SchemaExtension:{leave:({directives:e,operationTypes:t})=>p(["extend schema",p(e," "),M(t)]," ")},ScalarTypeExtension:{leave:({name:e,directives:t})=>p(["extend scalar",e,p(t," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:i})=>p(["extend type",e,y("implements ",p(t," & ")),p(n," "),M(i)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:i})=>p(["extend interface",e,y("implements ",p(t," & ")),p(n," "),M(i)]," ")},UnionTypeExtension:{leave:({name:e,directives:t,types:n})=>p(["extend union",e,p(t," "),y("= ",p(n," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:t,values:n})=>p(["extend enum",e,p(t," "),M(n)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:t,fields:n})=>p(["extend input",e,p(t," "),M(n)]," ")}};function p(e,t=""){var n;return(n=e==null?void 0:e.filter(i=>i).join(t))!==null&&n!==void 0?n:""}function M(e){return y(`{
`,ve(p(e,`
`)),`
}`)}function y(e,t,n=""){return t!=null&&t!==""?e+t+n:""}function ve(e){return y("  ",e.replace(/\n/g,`
  `))}function Ge(e){var t;return(t=e==null?void 0:e.some(n=>n.includes(`
`)))!==null&&t!==void 0?t:!1}function ke(e,t){switch(e.kind){case u.NULL:return null;case u.INT:return parseInt(e.value,10);case u.FLOAT:return parseFloat(e.value);case u.STRING:case u.ENUM:case u.BOOLEAN:return e.value;case u.LIST:return e.values.map(n=>ke(n,t));case u.OBJECT:return W(e.fields,n=>n.name.value,n=>ke(n.value,t));case u.VARIABLE:return t==null?void 0:t[e.name.value]}}function B(e){if(e!=null||I(!1,"Must provide name."),typeof e=="string"||I(!1,"Expected name to be a string."),e.length===0)throw new _("Expected name to be a non-empty string.");for(let t=1;t<e.length;++t)if(!He(e.charCodeAt(t)))throw new _(`Names must only contain [_a-zA-Z0-9] but "${e}" does not.`);if(!Ce(e.charCodeAt(0)))throw new _(`Names must start with [_a-zA-Z] but "${e}" does not.`);return e}function Tn(e){if(e==="true"||e==="false"||e==="null")throw new _(`Enum values cannot be named: ${e}`);return B(e)}function it(e){return de(e)||q(e)||j(e)||K(e)||ee(e)||te(e)||he(e)||Y(e)}function de(e){return Q(e,ne)}function q(e){return Q(e,H)}function yn(e){if(!q(e))throw new Error(`Expected ${m(e)} to be a GraphQL Object type.`);return e}function j(e){return Q(e,mt)}function En(e){if(!j(e))throw new Error(`Expected ${m(e)} to be a GraphQL Interface type.`);return e}function K(e){return Q(e,Tt)}function ee(e){return Q(e,Oe)}function te(e){return Q(e,yt)}function he(e){return Q(e,R)}function Y(e){return Q(e,E)}function st(e){return de(e)||ee(e)||te(e)||Fe(e)&&st(e.ofType)}function rt(e){return de(e)||q(e)||j(e)||K(e)||ee(e)||Fe(e)&&rt(e.ofType)}function ot(e){return de(e)||ee(e)}function Nn(e){return j(e)||K(e)}class R{constructor(t){it(t)||I(!1,`Expected ${m(t)} to be a GraphQL type.`),this.ofType=t}get[Symbol.toStringTag](){return"GraphQLList"}toString(){return"["+String(this.ofType)+"]"}toJSON(){return this.toString()}}class E{constructor(t){at(t)||I(!1,`Expected ${m(t)} to be a GraphQL nullable type.`),this.ofType=t}get[Symbol.toStringTag](){return"GraphQLNonNull"}toString(){return String(this.ofType)+"!"}toJSON(){return this.toString()}}function Fe(e){return he(e)||Y(e)}function at(e){return it(e)&&!Y(e)}function vn(e){if(!at(e))throw new Error(`Expected ${m(e)} to be a GraphQL nullable type.`);return e}function In(e){if(e){let t=e;for(;Fe(t);)t=t.ofType;return t}}function ct(e){return typeof e=="function"?e():e}function ut(e){return typeof e=="function"?e():e}class ne{constructor(t){var n,i,s,r;const a=(n=t.parseValue)!==null&&n!==void 0?n:Be;this.name=B(t.name),this.description=t.description,this.specifiedByURL=t.specifiedByURL,this.serialize=(i=t.serialize)!==null&&i!==void 0?i:Be,this.parseValue=a,this.parseLiteral=(s=t.parseLiteral)!==null&&s!==void 0?s:(l,d)=>a(ke(l,d)),this.extensions=C(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(r=t.extensionASTNodes)!==null&&r!==void 0?r:[],t.specifiedByURL==null||typeof t.specifiedByURL=="string"||I(!1,`${this.name} must provide "specifiedByURL" as a string, but got: ${m(t.specifiedByURL)}.`),t.serialize==null||typeof t.serialize=="function"||I(!1,`${this.name} must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.`),t.parseLiteral&&(typeof t.parseValue=="function"&&typeof t.parseLiteral=="function"||I(!1,`${this.name} must provide both "parseValue" and "parseLiteral" functions.`))}get[Symbol.toStringTag](){return"GraphQLScalarType"}toConfig(){return{name:this.name,description:this.description,specifiedByURL:this.specifiedByURL,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class H{constructor(t){var n;this.name=B(t.name),this.description=t.description,this.isTypeOf=t.isTypeOf,this.extensions=C(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._fields=()=>pt(t),this._interfaces=()=>lt(t),t.isTypeOf==null||typeof t.isTypeOf=="function"||I(!1,`${this.name} must provide "isTypeOf" as a function, but got: ${m(t.isTypeOf)}.`)}get[Symbol.toStringTag](){return"GraphQLObjectType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}getInterfaces(){return typeof this._interfaces=="function"&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:ht(this.getFields()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function lt(e){var t;const n=ct((t=e.interfaces)!==null&&t!==void 0?t:[]);return Array.isArray(n)||I(!1,`${e.name} interfaces must be an Array or a function which returns an Array.`),n}function pt(e){const t=ut(e.fields);return se(t)||I(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),xe(t,(n,i)=>{var s;se(n)||I(!1,`${e.name}.${i} field config must be an object.`),n.resolve==null||typeof n.resolve=="function"||I(!1,`${e.name}.${i} field resolver must be a function if provided, but got: ${m(n.resolve)}.`);const r=(s=n.args)!==null&&s!==void 0?s:{};return se(r)||I(!1,`${e.name}.${i} args must be an object with argument names as keys.`),{name:B(i),description:n.description,type:n.type,args:dt(r),resolve:n.resolve,subscribe:n.subscribe,deprecationReason:n.deprecationReason,extensions:C(n.extensions),astNode:n.astNode}})}function dt(e){return Object.entries(e).map(([t,n])=>({name:B(t),description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:C(n.extensions),astNode:n.astNode}))}function se(e){return z(e)&&!Array.isArray(e)}function ht(e){return xe(e,t=>({description:t.description,type:t.type,args:ft(t.args),resolve:t.resolve,subscribe:t.subscribe,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}))}function ft(e){return W(e,t=>t.name,t=>({description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}))}class mt{constructor(t){var n;this.name=B(t.name),this.description=t.description,this.resolveType=t.resolveType,this.extensions=C(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._fields=pt.bind(void 0,t),this._interfaces=lt.bind(void 0,t),t.resolveType==null||typeof t.resolveType=="function"||I(!1,`${this.name} must provide "resolveType" as a function, but got: ${m(t.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLInterfaceType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}getInterfaces(){return typeof this._interfaces=="function"&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:ht(this.getFields()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class Tt{constructor(t){var n;this.name=B(t.name),this.description=t.description,this.resolveType=t.resolveType,this.extensions=C(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._types=_n.bind(void 0,t),t.resolveType==null||typeof t.resolveType=="function"||I(!1,`${this.name} must provide "resolveType" as a function, but got: ${m(t.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLUnionType"}getTypes(){return typeof this._types=="function"&&(this._types=this._types()),this._types}toConfig(){return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function _n(e){const t=ct(e.types);return Array.isArray(t)||I(!1,`Must provide Array of types or a function which returns such an array for Union ${e.name}.`),t}class Oe{constructor(t){var n;this.name=B(t.name),this.description=t.description,this.extensions=C(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._values=An(this.name,t.values),this._valueLookup=new Map(this._values.map(i=>[i.value,i])),this._nameLookup=nt(this._values,i=>i.name)}get[Symbol.toStringTag](){return"GraphQLEnumType"}getValues(){return this._values}getValue(t){return this._nameLookup[t]}serialize(t){const n=this._valueLookup.get(t);if(n===void 0)throw new _(`Enum "${this.name}" cannot represent value: ${m(t)}`);return n.name}parseValue(t){if(typeof t!="string"){const i=m(t);throw new _(`Enum "${this.name}" cannot represent non-string value: ${i}.`+Ne(this,i))}const n=this.getValue(t);if(n==null)throw new _(`Value "${t}" does not exist in "${this.name}" enum.`+Ne(this,t));return n.value}parseLiteral(t,n){if(t.kind!==u.ENUM){const s=X(t);throw new _(`Enum "${this.name}" cannot represent non-enum value: ${s}.`+Ne(this,s),{nodes:t})}const i=this.getValue(t.value);if(i==null){const s=X(t);throw new _(`Value "${s}" does not exist in "${this.name}" enum.`+Ne(this,s),{nodes:t})}return i.value}toConfig(){const t=W(this.getValues(),n=>n.name,n=>({description:n.description,value:n.value,deprecationReason:n.deprecationReason,extensions:n.extensions,astNode:n.astNode}));return{name:this.name,description:this.description,values:t,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function Ne(e,t){const n=e.getValues().map(s=>s.name),i=rn(t,n);return tn("the enum value",i)}function An(e,t){return se(t)||I(!1,`${e} values must be an object with value names as keys.`),Object.entries(t).map(([n,i])=>(se(i)||I(!1,`${e}.${n} must refer to an object with a "value" key representing an internal value but got: ${m(i)}.`),{name:Tn(n),description:i.description,value:i.value!==void 0?i.value:n,deprecationReason:i.deprecationReason,extensions:C(i.extensions),astNode:i.astNode}))}class yt{constructor(t){var n;this.name=B(t.name),this.description=t.description,this.extensions=C(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._fields=xn.bind(void 0,t)}get[Symbol.toStringTag](){return"GraphQLInputObjectType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}toConfig(){const t=xe(this.getFields(),n=>({description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:n.extensions,astNode:n.astNode}));return{name:this.name,description:this.description,fields:t,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function xn(e){const t=ut(e.fields);return se(t)||I(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),xe(t,(n,i)=>(!("resolve"in n)||I(!1,`${e.name}.${i} field has a resolve property, but Input Types cannot define resolvers.`),{name:B(i),description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:C(n.extensions),astNode:n.astNode}))}const Se=2147483647,Le=-2147483648,On=new ne({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",serialize(e){const t=fe(e);if(typeof t=="boolean")return t?1:0;let n=t;if(typeof t=="string"&&t!==""&&(n=Number(t)),typeof n!="number"||!Number.isInteger(n))throw new _(`Int cannot represent non-integer value: ${m(t)}`);if(n>Se||n<Le)throw new _("Int cannot represent non 32-bit signed integer value: "+m(t));return n},parseValue(e){if(typeof e!="number"||!Number.isInteger(e))throw new _(`Int cannot represent non-integer value: ${m(e)}`);if(e>Se||e<Le)throw new _(`Int cannot represent non 32-bit signed integer value: ${e}`);return e},parseLiteral(e){if(e.kind!==u.INT)throw new _(`Int cannot represent non-integer value: ${X(e)}`,{nodes:e});const t=parseInt(e.value,10);if(t>Se||t<Le)throw new _(`Int cannot represent non 32-bit signed integer value: ${e.value}`,{nodes:e});return t}}),bn=new ne({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",serialize(e){const t=fe(e);if(typeof t=="boolean")return t?1:0;let n=t;if(typeof t=="string"&&t!==""&&(n=Number(t)),typeof n!="number"||!Number.isFinite(n))throw new _(`Float cannot represent non numeric value: ${m(t)}`);return n},parseValue(e){if(typeof e!="number"||!Number.isFinite(e))throw new _(`Float cannot represent non numeric value: ${m(e)}`);return e},parseLiteral(e){if(e.kind!==u.FLOAT&&e.kind!==u.INT)throw new _(`Float cannot represent non numeric value: ${X(e)}`,e);return parseFloat(e.value)}}),b=new ne({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",serialize(e){const t=fe(e);if(typeof t=="string")return t;if(typeof t=="boolean")return t?"true":"false";if(typeof t=="number"&&Number.isFinite(t))return t.toString();throw new _(`String cannot represent value: ${m(e)}`)},parseValue(e){if(typeof e!="string")throw new _(`String cannot represent a non string value: ${m(e)}`);return e},parseLiteral(e){if(e.kind!==u.STRING)throw new _(`String cannot represent a non string value: ${X(e)}`,{nodes:e});return e.value}}),k=new ne({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",serialize(e){const t=fe(e);if(typeof t=="boolean")return t;if(Number.isFinite(t))return t!==0;throw new _(`Boolean cannot represent a non boolean value: ${m(t)}`)},parseValue(e){if(typeof e!="boolean")throw new _(`Boolean cannot represent a non boolean value: ${m(e)}`);return e},parseLiteral(e){if(e.kind!==u.BOOLEAN)throw new _(`Boolean cannot represent a non boolean value: ${X(e)}`,{nodes:e});return e.value}}),Et=new ne({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',serialize(e){const t=fe(e);if(typeof t=="string")return t;if(Number.isInteger(t))return String(t);throw new _(`ID cannot represent value: ${m(e)}`)},parseValue(e){if(typeof e=="string")return e;if(typeof e=="number"&&Number.isInteger(e))return e.toString();throw new _(`ID cannot represent value: ${m(e)}`)},parseLiteral(e){if(e.kind!==u.STRING&&e.kind!==u.INT)throw new _("ID cannot represent a non-string and non-integer value: "+X(e),{nodes:e});return e.value}}),gn=Object.freeze([b,On,bn,k,Et]);function fe(e){if(z(e)){if(typeof e.valueOf=="function"){const t=e.valueOf();if(!z(t))return t}if(typeof e.toJSON=="function")return e.toJSON()}return e}function Sn(e){return Q(e,oe)}class oe{constructor(t){var n,i;this.name=B(t.name),this.description=t.description,this.locations=t.locations,this.isRepeatable=(n=t.isRepeatable)!==null&&n!==void 0?n:!1,this.extensions=C(t.extensions),this.astNode=t.astNode,Array.isArray(t.locations)||I(!1,`@${t.name} locations must be an Array.`);const s=(i=t.args)!==null&&i!==void 0?i:{};z(s)&&!Array.isArray(s)||I(!1,`@${t.name} args must be an object with argument names as keys.`),this.args=dt(s)}get[Symbol.toStringTag](){return"GraphQLDirective"}toConfig(){return{name:this.name,description:this.description,locations:this.locations,args:ft(this.args),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}}toString(){return"@"+this.name}toJSON(){return this.toString()}}const Ln=new oe({name:"include",description:"Directs the executor to include this field or fragment only when the `if` argument is true.",locations:[v.FIELD,v.FRAGMENT_SPREAD,v.INLINE_FRAGMENT],args:{if:{type:new E(k),description:"Included when true."}}}),Dn=new oe({name:"skip",description:"Directs the executor to skip this field or fragment when the `if` argument is true.",locations:[v.FIELD,v.FRAGMENT_SPREAD,v.INLINE_FRAGMENT],args:{if:{type:new E(k),description:"Skipped when true."}}}),wn="No longer supported",Rn=new oe({name:"deprecated",description:"Marks an element of a GraphQL schema as no longer supported.",locations:[v.FIELD_DEFINITION,v.ARGUMENT_DEFINITION,v.INPUT_FIELD_DEFINITION,v.ENUM_VALUE],args:{reason:{type:b,description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",defaultValue:wn}}}),kn=new oe({name:"specifiedBy",description:"Exposes a URL that specifies the behavior of this scalar.",locations:[v.SCALAR],args:{url:{type:new E(b),description:"The URL that specifies the behavior of this scalar."}}}),Cn=Object.freeze([Ln,Dn,Rn,kn]);function Fn(e){return typeof e=="object"&&typeof(e==null?void 0:e[Symbol.iterator])=="function"}function ue(e,t){if(Y(t)){const n=ue(e,t.ofType);return(n==null?void 0:n.kind)===u.NULL?null:n}if(e===null)return{kind:u.NULL};if(e===void 0)return null;if(he(t)){const n=t.ofType;if(Fn(e)){const i=[];for(const s of e){const r=ue(s,n);r!=null&&i.push(r)}return{kind:u.LIST,values:i}}return ue(e,n)}if(te(t)){if(!z(e))return null;const n=[];for(const i of Object.values(t.getFields())){const s=ue(e[i.name],i.type);s&&n.push({kind:u.OBJECT_FIELD,name:{kind:u.NAME,value:i.name},value:s})}return{kind:u.OBJECT,fields:n}}if(ot(t)){const n=t.serialize(e);if(n==null)return null;if(typeof n=="boolean")return{kind:u.BOOLEAN,value:n};if(typeof n=="number"&&Number.isFinite(n)){const i=String(n);return Qe.test(i)?{kind:u.INT,value:i}:{kind:u.FLOAT,value:i}}if(typeof n=="string")return ee(t)?{kind:u.ENUM,value:n}:t===Et&&Qe.test(n)?{kind:u.INT,value:n}:{kind:u.STRING,value:n};throw new TypeError(`Cannot convert value to AST: ${m(n)}.`)}Ie(!1,"Unexpected input type: "+m(t))}const Qe=/^-?(?:0|[1-9][0-9]*)$/,Ue=new H({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:()=>({description:{type:b,resolve:e=>e.description},types:{description:"A list of all types supported by this server.",type:new E(new R(new E($))),resolve(e){return Object.values(e.getTypeMap())}},queryType:{description:"The type that query operations will be rooted at.",type:new E($),resolve:e=>e.getQueryType()},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:$,resolve:e=>e.getMutationType()},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:$,resolve:e=>e.getSubscriptionType()},directives:{description:"A list of all directives supported by this server.",type:new E(new R(new E(Nt))),resolve:e=>e.getDirectives()}})}),Nt=new H({name:"__Directive",description:`A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.

In some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.`,fields:()=>({name:{type:new E(b),resolve:e=>e.name},description:{type:b,resolve:e=>e.description},isRepeatable:{type:new E(k),resolve:e=>e.isRepeatable},locations:{type:new E(new R(new E(vt))),resolve:e=>e.locations},args:{type:new E(new R(new E(be))),args:{includeDeprecated:{type:k,defaultValue:!1}},resolve(e,{includeDeprecated:t}){return t?e.args:e.args.filter(n=>n.deprecationReason==null)}}})}),vt=new Oe({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:v.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:v.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:v.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:v.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:v.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:v.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:v.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:v.VARIABLE_DEFINITION,description:"Location adjacent to a variable definition."},SCHEMA:{value:v.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:v.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:v.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:v.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:v.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:v.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:v.UNION,description:"Location adjacent to a union definition."},ENUM:{value:v.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:v.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:v.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:v.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}}),$=new H({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:()=>({kind:{type:new E(At),resolve(e){if(de(e))return O.SCALAR;if(q(e))return O.OBJECT;if(j(e))return O.INTERFACE;if(K(e))return O.UNION;if(ee(e))return O.ENUM;if(te(e))return O.INPUT_OBJECT;if(he(e))return O.LIST;if(Y(e))return O.NON_NULL;Ie(!1,`Unexpected type: "${m(e)}".`)}},name:{type:b,resolve:e=>"name"in e?e.name:void 0},description:{type:b,resolve:e=>"description"in e?e.description:void 0},specifiedByURL:{type:b,resolve:e=>"specifiedByURL"in e?e.specifiedByURL:void 0},fields:{type:new R(new E(It)),args:{includeDeprecated:{type:k,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(q(e)||j(e)){const n=Object.values(e.getFields());return t?n:n.filter(i=>i.deprecationReason==null)}}},interfaces:{type:new R(new E($)),resolve(e){if(q(e)||j(e))return e.getInterfaces()}},possibleTypes:{type:new R(new E($)),resolve(e,t,n,{schema:i}){if(Nn(e))return i.getPossibleTypes(e)}},enumValues:{type:new R(new E(_t)),args:{includeDeprecated:{type:k,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(ee(e)){const n=e.getValues();return t?n:n.filter(i=>i.deprecationReason==null)}}},inputFields:{type:new R(new E(be)),args:{includeDeprecated:{type:k,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(te(e)){const n=Object.values(e.getFields());return t?n:n.filter(i=>i.deprecationReason==null)}}},ofType:{type:$,resolve:e=>"ofType"in e?e.ofType:void 0}})}),It=new H({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:()=>({name:{type:new E(b),resolve:e=>e.name},description:{type:b,resolve:e=>e.description},args:{type:new E(new R(new E(be))),args:{includeDeprecated:{type:k,defaultValue:!1}},resolve(e,{includeDeprecated:t}){return t?e.args:e.args.filter(n=>n.deprecationReason==null)}},type:{type:new E($),resolve:e=>e.type},isDeprecated:{type:new E(k),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:b,resolve:e=>e.deprecationReason}})}),be=new H({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:()=>({name:{type:new E(b),resolve:e=>e.name},description:{type:b,resolve:e=>e.description},type:{type:new E($),resolve:e=>e.type},defaultValue:{type:b,description:"A GraphQL-formatted string representing the default value for this input value.",resolve(e){const{type:t,defaultValue:n}=e,i=ue(n,t);return i?X(i):null}},isDeprecated:{type:new E(k),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:b,resolve:e=>e.deprecationReason}})}),_t=new H({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:()=>({name:{type:new E(b),resolve:e=>e.name},description:{type:b,resolve:e=>e.description},isDeprecated:{type:new E(k),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:b,resolve:e=>e.deprecationReason}})});var O;(function(e){e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.INPUT_OBJECT="INPUT_OBJECT",e.LIST="LIST",e.NON_NULL="NON_NULL"})(O||(O={}));const At=new Oe({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:O.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:O.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:O.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:O.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:O.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:O.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:O.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:O.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}});new E(Ue);new E(b);new E(b);const Un=Object.freeze([Ue,Nt,vt,$,It,be,_t,At]);class Mn{constructor(t){var n,i;this.__validationErrors=t.assumeValid===!0?[]:void 0,z(t)||I(!1,"Must provide configuration object."),!t.types||Array.isArray(t.types)||I(!1,`"types" must be Array if provided but got: ${m(t.types)}.`),!t.directives||Array.isArray(t.directives)||I(!1,`"directives" must be Array if provided but got: ${m(t.directives)}.`),this.description=t.description,this.extensions=C(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._queryType=t.query,this._mutationType=t.mutation,this._subscriptionType=t.subscription,this._directives=(i=t.directives)!==null&&i!==void 0?i:Cn;const s=new Set(t.types);if(t.types!=null)for(const r of t.types)s.delete(r),V(r,s);this._queryType!=null&&V(this._queryType,s),this._mutationType!=null&&V(this._mutationType,s),this._subscriptionType!=null&&V(this._subscriptionType,s);for(const r of this._directives)if(Sn(r))for(const a of r.args)V(a.type,s);V(Ue,s),this._typeMap=Object.create(null),this._subTypeMap=Object.create(null),this._implementationsMap=Object.create(null);for(const r of s){if(r==null)continue;const a=r.name;if(a||I(!1,"One of the provided types for building the Schema is missing a name."),this._typeMap[a]!==void 0)throw new Error(`Schema must contain uniquely named types but contains multiple types named "${a}".`);if(this._typeMap[a]=r,j(r)){for(const l of r.getInterfaces())if(j(l)){let d=this._implementationsMap[l.name];d===void 0&&(d=this._implementationsMap[l.name]={objects:[],interfaces:[]}),d.interfaces.push(r)}}else if(q(r)){for(const l of r.getInterfaces())if(j(l)){let d=this._implementationsMap[l.name];d===void 0&&(d=this._implementationsMap[l.name]={objects:[],interfaces:[]}),d.objects.push(r)}}}}get[Symbol.toStringTag](){return"GraphQLSchema"}getQueryType(){return this._queryType}getMutationType(){return this._mutationType}getSubscriptionType(){return this._subscriptionType}getRootType(t){switch(t){case J.QUERY:return this.getQueryType();case J.MUTATION:return this.getMutationType();case J.SUBSCRIPTION:return this.getSubscriptionType()}}getTypeMap(){return this._typeMap}getType(t){return this.getTypeMap()[t]}getPossibleTypes(t){return K(t)?t.getTypes():this.getImplementations(t).objects}getImplementations(t){const n=this._implementationsMap[t.name];return n??{objects:[],interfaces:[]}}isSubType(t,n){let i=this._subTypeMap[t.name];if(i===void 0){if(i=Object.create(null),K(t))for(const s of t.getTypes())i[s.name]=!0;else{const s=this.getImplementations(t);for(const r of s.objects)i[r.name]=!0;for(const r of s.interfaces)i[r.name]=!0}this._subTypeMap[t.name]=i}return i[n.name]!==void 0}getDirectives(){return this._directives}getDirective(t){return this.getDirectives().find(n=>n.name===t)}toConfig(){return{description:this.description,query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:Object.values(this.getTypeMap()),directives:this.getDirectives(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,assumeValid:this.__validationErrors!==void 0}}}function V(e,t){const n=In(e);if(!t.has(n)){if(t.add(n),K(n))for(const i of n.getTypes())V(i,t);else if(q(n)||j(n)){for(const i of n.getInterfaces())V(i,t);for(const i of Object.values(n.getFields())){V(i.type,t);for(const s of i.args)V(s.type,t)}}else if(te(n))for(const i of Object.values(n.getFields()))V(i.type,t)}return t}function le(e,t,n){if(e){if(e.kind===u.VARIABLE){const i=e.name.value;if(n==null||n[i]===void 0)return;const s=n[i];return s===null&&Y(t)?void 0:s}if(Y(t))return e.kind===u.NULL?void 0:le(e,t.ofType,n);if(e.kind===u.NULL)return null;if(he(t)){const i=t.ofType;if(e.kind===u.LIST){const r=[];for(const a of e.values)if(Je(a,n)){if(Y(i))return;r.push(null)}else{const l=le(a,i,n);if(l===void 0)return;r.push(l)}return r}const s=le(e,i,n);return s===void 0?void 0:[s]}if(te(t)){if(e.kind!==u.OBJECT)return;const i=Object.create(null),s=nt(e.fields,r=>r.name.value);for(const r of Object.values(t.getFields())){const a=s[r.name];if(!a||Je(a.value,n)){if(r.defaultValue!==void 0)i[r.name]=r.defaultValue;else if(Y(r.type))return;continue}const l=le(a.value,r.type,n);if(l===void 0)return;i[r.name]=l}return i}if(ot(t)){let i;try{i=t.parseLiteral(e,n)}catch{return}return i===void 0?void 0:i}Ie(!1,"Unexpected input type: "+m(t))}}function Je(e,t){return e.kind===u.VARIABLE&&(t==null||t[e.name.value]===void 0)}function Vn(e){const t={descriptions:!0,specifiedByUrl:!1,directiveIsRepeatable:!1,schemaDescription:!1,inputValueDeprecation:!1,...e},n=t.descriptions?"description":"",i=t.specifiedByUrl?"specifiedByURL":"",s=t.directiveIsRepeatable?"isRepeatable":"",r=t.schemaDescription?n:"";function a(l){return t.inputValueDeprecation?l:""}return`
    query IntrospectionQuery {
      __schema {
        ${r}
        queryType { name }
        mutationType { name }
        subscriptionType { name }
        types {
          ...FullType
        }
        directives {
          name
          ${n}
          ${s}
          locations
          args${a("(includeDeprecated: true)")} {
            ...InputValue
          }
        }
      }
    }

    fragment FullType on __Type {
      kind
      name
      ${n}
      ${i}
      fields(includeDeprecated: true) {
        name
        ${n}
        args${a("(includeDeprecated: true)")} {
          ...InputValue
        }
        type {
          ...TypeRef
        }
        isDeprecated
        deprecationReason
      }
      inputFields${a("(includeDeprecated: true)")} {
        ...InputValue
      }
      interfaces {
        ...TypeRef
      }
      enumValues(includeDeprecated: true) {
        name
        ${n}
        isDeprecated
        deprecationReason
      }
      possibleTypes {
        ...TypeRef
      }
    }

    fragment InputValue on __InputValue {
      name
      ${n}
      type { ...TypeRef }
      defaultValue
      ${a("isDeprecated")}
      ${a("deprecationReason")}
    }

    fragment TypeRef on __Type {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
                ofType {
                  kind
                  name
                  ofType {
                    kind
                    name
                  }
                }
              }
            }
          }
        }
      }
    }
  `}function $n(e,t){z(e)&&z(e.__schema)||I(!1,`Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: ${m(e)}.`);const n=e.__schema,i=W(n.types,c=>c.name,c=>A(c));for(const c of[...gn,...Un])i[c.name]&&(i[c.name]=c);const s=n.queryType?h(n.queryType):null,r=n.mutationType?h(n.mutationType):null,a=n.subscriptionType?h(n.subscriptionType):null,l=n.directives?n.directives.map(xt):[];return new Mn({description:n.description,query:s,mutation:r,subscription:a,types:Object.values(i),directives:l,assumeValid:t==null?void 0:t.assumeValid});function d(c){if(c.kind===O.LIST){const T=c.ofType;if(!T)throw new Error("Decorated type deeper than introspection query.");return new R(d(T))}if(c.kind===O.NON_NULL){const T=c.ofType;if(!T)throw new Error("Decorated type deeper than introspection query.");const G=d(T);return new E(vn(G))}return f(c)}function f(c){const T=c.name;if(!T)throw new Error(`Unknown type reference: ${m(c)}.`);const G=i[T];if(!G)throw new Error(`Invalid or incomplete schema, unknown type: ${T}. Ensure that a full introspection query is used in order to build a client schema.`);return G}function h(c){return yn(f(c))}function x(c){return En(f(c))}function A(c){if(c!=null&&c.name!=null&&c.kind!=null)switch(c.kind){case O.SCALAR:return L(c);case O.OBJECT:return D(c);case O.INTERFACE:return F(c);case O.UNION:return w(c);case O.ENUM:return me(c);case O.INPUT_OBJECT:return P(c)}const T=m(c);throw new Error(`Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${T}.`)}function L(c){return new ne({name:c.name,description:c.description,specifiedByURL:c.specifiedByURL})}function N(c){if(c.interfaces===null&&c.kind===O.INTERFACE)return[];if(!c.interfaces){const T=m(c);throw new Error(`Introspection result missing interfaces: ${T}.`)}return c.interfaces.map(x)}function D(c){return new H({name:c.name,description:c.description,interfaces:()=>N(c),fields:()=>U(c)})}function F(c){return new mt({name:c.name,description:c.description,interfaces:()=>N(c),fields:()=>U(c)})}function w(c){if(!c.possibleTypes){const T=m(c);throw new Error(`Introspection result missing possibleTypes: ${T}.`)}return new Tt({name:c.name,description:c.description,types:()=>c.possibleTypes.map(h)})}function me(c){if(!c.enumValues){const T=m(c);throw new Error(`Introspection result missing enumValues: ${T}.`)}return new Oe({name:c.name,description:c.description,values:W(c.enumValues,T=>T.name,T=>({description:T.description,deprecationReason:T.deprecationReason}))})}function P(c){if(!c.inputFields){const T=m(c);throw new Error(`Introspection result missing inputFields: ${T}.`)}return new yt({name:c.name,description:c.description,fields:()=>ie(c.inputFields)})}function U(c){if(!c.fields)throw new Error(`Introspection result missing fields: ${m(c)}.`);return W(c.fields,T=>T.name,ae)}function ae(c){const T=d(c.type);if(!rt(T)){const G=m(T);throw new Error(`Introspection must provide output type for fields, but received: ${G}.`)}if(!c.args){const G=m(c);throw new Error(`Introspection result missing field args: ${G}.`)}return{description:c.description,deprecationReason:c.deprecationReason,type:T,args:ie(c.args)}}function ie(c){return W(c,T=>T.name,Te)}function Te(c){const T=d(c.type);if(!st(T)){const Ot=m(T);throw new Error(`Introspection must provide input type for arguments, but received: ${Ot}.`)}const G=c.defaultValue!=null?le(Zt(c.defaultValue),T):void 0;return{description:c.description,type:T,defaultValue:G,deprecationReason:c.deprecationReason}}function xt(c){if(!c.args){const T=m(c);throw new Error(`Introspection result missing directive args: ${T}.`)}if(!c.locations){const T=m(c);throw new Error(`Introspection result missing directive locations: ${T}.`)}return new oe({name:c.name,description:c.description,isRepeatable:c.isRepeatable,locations:c.locations.slice(),args:ie(c.args)})}}export{E as G,J as O,R as a,H as b,yt as c,Oe as d,$n as e,ne as f,Vn as g};
